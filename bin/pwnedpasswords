#!/usr/bin/env python3
# vim: ft=python

from subprocess import call
import argparse
import os
import sys
import pprint
from pwnedpasswords import Password

class PwnedPasswordsCommandLineHandler(object):
    def __init__(self, namespace):
        self.password = Password(namespace.password[0], namespace.original_password_is_hash)

    def run(self, *args):
        print(self.password.check())

def BoolAction(true_choice):
    class Action(argparse.Action):
        def __call__(self, parser, namespace, values, option_string=None):
            setattr(namespace, self.dest, option_string == true_choice)

    return Action


if __name__ == "__main__":
    parser = argparse.ArgumentParser(prog='pwnedpasswords')
    parser.add_argument("password", type=str, nargs=1, help="The password or hashed password to search for.")
    parser.add_argument("--original-password-is-hash", nargs=0, action=BoolAction("--original-password-is-a-hash"), dest="original_password_is_hash", default=False, help="Searches for a password which was originally a SHA-1 hash, causing it to be hashed again before being compared to the Pwned Password repository.")

    namespace = parser.parse_args()
    handler = PwnedPasswordsCommandLineHandler(namespace)
    handler.run()

